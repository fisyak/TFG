 Flow diagram:
 ==============
StKFVertexMaker::Make 
	KFParticle::SetField(bField); set mag.field 
	MakeParticles:  convert dca tracks into KFParticle, 
	     Create TObjSet's for tracks ("KFTracks") and vertices ("KFVertices") with TObjArray (fParticles and vertices)
     		AddBeamTrack(); if any
      		 for each good glob. track (kg = track.key())
          		Fill TrackNodeMap[kg] = node (global tracks)
          		AddTrackAt(gTrack);
            		AddTrackAt(dca, kg)

	StKFVertex::ResetTotalNoVertices(); => fTotalNoVertices = 0; reset vertex counter
	Fit()
		  PrimaryVertices(); 
			For 2 passes {
				PrimaryVertexSeeds(parents);
				fgcVertices->DoTrack2VertexAssociation
                                                                    for each vtx {
                                                                         for each track k {
                                                                             Chi2s[k] = particle->GetDeviationFromVertex(vtx->Vertex());
                                                                           }
                                                                           sort over Chi2s
                                                                          StKFTrack *track = new StKFTrack(particle,Chi2s[k]);
                                                                          vtx->AddTrack(track);
                                                                        }
                                                                      UpdateWeights
				AnnelingFcn(TMath::Exp(-TempLog))
					 fgcVertices->Fit();

                                                                                                MergeDuplicatedVertices
						for each vertex vtx
							vtx->CheckBeamConstraint();
							vtx->Fit()
								ResetParticles();
								CheckBeamConstraint();
								KFVertex::SetVtxGuess
								KFVertex::ConstructPrimaryVertex
								KFVertex::SetVtxGuess
								KFVertex::ConstructPrimaryVertex
								Assign MC								
						UpdateStVertexTrackAssociation
							StKFVertex::UpdateVertex2TrackChi2()
						UpdateWeights()
				fgcVertices->SetParents(Int_t *)
			}
//			fgcVertices->MergeDuplicatedVertices();
			fgcVertices->CleanDuplicatedVertices();
//			fgcVertices->MergeDuplicatedVertices();		
			fgcVertices->Fit()  //  anneling T -> 1 
			fgcVertices->UniqueTracks2VertexAssociation();
			fgcVertices->SetParents();
		  SecondaryVertices();
			Foreach track without parent try to combine into vertex, TempLog = 0
			vtx->Fit();

			SecondaryVertices->UpdateWeights()
			SecondaryVertices->UniqueTracks2VertexAssociation()
			SecondaryVertices->SetParents();

		  fgcVertices->Fit()
		  
	ReFitToVertex();
	  FitTrack2Vertex
#if 0
	MakeV0()
#else 
        ParticleFinder
          Fill particles[] and particlesPdg[] for each global track with hypthesises for pip, p and e
          StKFParticleInterface::SetField(bField);
	     KFParticleTopoReconstructor::SetField(field);			
               KFParticle::SetField(b);	     
  	       KFParticleSIMD::SetField(float(b));
  	  StKFParticleInterface::SetParticles(particles);	
  	  StKFParticleInterface::SetParticlesPdg(particlesPdg);
  	  StKFParticleInterface::InitParticles();  
            KFParticleTopoReconstructor::Init( fParticles, &fParticlesPdg );  
              fTracks[NInputSets] initialization from  fParticles and  fParticlesPdg 
                      NInputSets = 8; //0 - pos sec, 1 - neg sec, 2 - pos prim, 3 - neg prim
                       at Last point:   4 - pos sec, 5 - neg sec, 6 - pos prim, 7 - neg prim
 	      fTracks[0].SetId(iTr, iTr); // no. in fParticles vector
#if 0
                  fKFParticlePVReconstructor->Init( &fTracks[0], nTracks );
                    fill fParticles 
                    fPrimVertices.clear();
                    fClusters.clear();
                    reconstruct PV
#endif
          StKFParticleInterface::CleanPV()
	  for (Int_t l = 0; l < noPV; l++) {
            get PV particle and 
            StKFParticleInterface::AddPV(*particle);
	      KFParticleTopoReconstructor::AddPV(pv)
		KFParticlePVReconstructor::AddPV(pv);
		  fPrimVertices.push_back(pv);
	          fClusters.push_back(cluster);
	        fPV.push_back(pvPart);
                KFParticleFinder::SetNPV(fPV.size());
          }
          StKFParticleInterface::ReconstructParticles();
            KFParticleTopoReconstructor::SortTracks(); over pdg and Input Sets
            KFParticleTopoReconstructor::ReconstructParticles();
              KFParticleTopoReconstructor::TransportPVTracksToPrimVertex()
                for fTracks[2-3] 
              KFParticleTopoReconstructor::GetChiToPrimVertex(&(fPV[0]), fPV.size());
              KFParticleFinder::FindParticles(fTracks, fChiToPrimVtx, fParticles, fPV, fPV.size());
              KFParticleFinder::FindParticles(KFPTrackVector* vRTracks, kfvector_float* ChiToPrimVtx,
                     std::vector<KFParticle>& Particles, std::vector<KFParticleSIMD, KFPSimdAllocator<KFParticleSIMD> >& PrimVtx, int nPV)
		KFParticleFinder::Find2DaughterDecay(vRTracks, ChiToPrimVtx,Particles, PrimVtx, fCuts2D,fSecCuts, fPrimCandidates, fSecCandidates);
			KFParticleFinder::ConstructV0(...)
			  KFParticleFinder::SaveV0PrimSecCand
#endif
--------------------------------------------------------------------------------
KFTracks:
   kg =  gTrack->key(); 
   TObjArray *fParticles; // == KFTracks
   fParticles[kg], kg = 0 -> beam line, kg > 0 kg == gTrack->key();

   TObjArray KFVertices; // KFVertices

   StKFVerticesCollection *fgcVertices;  // current vertex collection

   KFTracks



  
   [  StKFVerticesCollection ]
           |
            -> [ StKFVertex >
                  |
                  -> [KFTrack >
    [ Track >
      ->StTrackGeometry inner/outer
      ->StTrackTopologyMap
      ->StTrackFitTraits
      ->StTrackDetectorInfo
      ->StTrackNode
      ->	


    [ TrackNode >
       ||
       | -> [OwnedTracks]
       |->  [ReferencedTracks]
                [Track>
	           -> [Vertex]R
                   -> [TrackNode]R
                   -> [TrackDetectorInfo]
                   -> [FitTraits>
	           -> [TrackTopologyMap]
                   -> [endVertex]R
                   -> [inner/outer Geometry]
 
                 [GlobalTrack : Track]
                   -> [dcaGeometry]
                 [PrimaryTrack: Track] 
                 [TrackMassFit: Track]
                   -> [KFParticle]

    [ Vertex] 
       |-> [parent Track]
    [ PrimaryVertex: Vertex]
       |-> [daughter Track >        
    [ V0Vertex: Vertex ]
       |-> [daughter Track[2] >        
    [ XiVertex: Vertex ]
       ||-> [daughter Track]        
       |->  [V0Vertex]
    [ KinkVertex: Vertex ]
       |-> [daughter Track]        
    [ CalibrationVertex : Vertex]
================================================================================
    [ TrackNode >
       ||
       | -> [OwnedTracks]
	 
       |->  [ReferencedTracks]
                [Track>
	           -> [Vertex]R
                   -> [TrackNode]R
                   -> [TrackDetectorInfo]
                   -> [FitTraits>
	           -> [TrackTopologyMap]
                   -> [endVertex]R
                   -> [inner/outer Geometry]
 
                 [GlobalTrack : Track]
                   -> [dcaGeometry]
                 [PrimaryTrack: Track] 
                 [TrackMassFit: Track]
                   -> [KFParticle]
================================================================================


[Vertex>     
 ||
 | -> parent() [MassFit]
  -> daughter() [Track>
   
